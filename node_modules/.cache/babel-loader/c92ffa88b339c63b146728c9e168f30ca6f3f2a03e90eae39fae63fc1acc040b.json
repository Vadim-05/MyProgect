{"ast":null,"code":"import { ref } from 'vue';\nimport { format, parseISO } from 'date-fns';\nimport { ru } from 'date-fns/locale';\nimport ordersData from '../data/orders.json';\nimport productsData from '../data/products.json';\n\n// Створюємо реактивні змінні\n\nexport default {\n  __name: 'HomePrihod',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const orders = ref(ordersData);\n    const products = ref(productsData);\n    const selectedOrder = ref(null);\n\n    // Функція для отримання даних про продукт\n    const getProductInfo = (productId, key) => {\n      const product = products.value.find(p => p.id === productId);\n      return product ? product[key] || '' : '';\n    };\n\n    // Функція для отримання кількості продуктів у замовленні\n    const getProductCount = orderId => {\n      const order = orders.value.find(order => order.id === orderId);\n      return order ? order.productIds.length : 0;\n    };\n\n    // Функція для форматування дати\n    const formatDate = (date, formatStr, locale) => format(parseISO(date), formatStr, {\n      locale\n    });\n\n    // Форматування дат\n    const formatShortDate = date => formatDate(date, 'MM/dd');\n    const formatLongDate = date => formatDate(date, 'dd/MMM/yyyy', ru);\n\n    // Функція для отримання ціни продукту\n    const getProductPrice = productId => {\n      const product = products.value.find(product => product.id === productId);\n      if (product?.price?.length > 0) {\n        const defaultPrice = product.price.find(price => price.isDefault === 1);\n        return defaultPrice ? `${defaultPrice.value} ${defaultPrice.symbol}` : '';\n      }\n      return '';\n    };\n\n    // Функція для обробки кліку на замовлення\n    const selectOrder = order => selectedOrder.value = order;\n    const __returned__ = {\n      orders,\n      products,\n      selectedOrder,\n      getProductInfo,\n      getProductCount,\n      formatDate,\n      formatShortDate,\n      formatLongDate,\n      getProductPrice,\n      selectOrder,\n      ref,\n      get format() {\n        return format;\n      },\n      get parseISO() {\n        return parseISO;\n      },\n      get ru() {\n        return ru;\n      },\n      get ordersData() {\n        return ordersData;\n      },\n      get productsData() {\n        return productsData;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","format","parseISO","ru","ordersData","productsData","orders","products","selectedOrder","getProductInfo","productId","key","product","value","find","p","id","getProductCount","orderId","order","productIds","length","formatDate","date","formatStr","locale","formatShortDate","formatLongDate","getProductPrice","price","defaultPrice","isDefault","symbol","selectOrder"],"sources":["/home/vadim/my-test/src/views/HomePrihod.vue"],"sourcesContent":["<template>\n  <div>\n    <ul>\n      <li class=\"order-item\" v-for=\"order in orders\" :key=\"order.id\" @click=\"selectOrder(order)\">\n        <span class=\"order-title\">Длиное название прихода</span>\n        <div class=\"order-info\">\n          <div>Кількість продуктів: {{ getProductCount(order.id) }}</div>\n          <div>Продукти</div>\n        </div>\n\n        <div class=\"order-info\">\n          <div>{{ formatShortDate(order.date) }}</div>\n          <div>{{ formatLongDate(order.date) }}</div>\n        </div>\n\n        <!-- Ціни продуктів для всіх замовлень -->\n        <div class=\"vfdsvfdcs\">\n          <ul>\n            <li v-for=\"productId in order.productIds\" :key=\"productId\">\n              <div>{{ getProductTitle(productId) || 'No product' }}</div>\n              <div class=\"product-price\">{{ getProductPrice(productId) || 'No price' }}</div>\n              <!-- Додатково відображаємо інформацію про продукт при виборі -->\n              <div v-if=\"selectedOrder && selectedOrder.id === order.id\">\n                <p>Деталі продукту:</p>\n                <ul>\n                  <li v-for=\"productId in order.productIds\" :key=\"productId\">\n                    <div>{{ getProductTitle(productId) || 'No product' }}</div>\n                    <div>{{ getProductDescription(productId) || 'No description' }}</div>\n                    <div class=\"product-price\">{{ getProductPrice(productId) || 'No price' }}</div>\n                  </li>\n                </ul>\n              </div>\n            </li>\n          </ul>\n        </div>\n      </li>\n    </ul>\n  </div>\n</template>\n\n<script setup>\nimport { ref } from 'vue';\nimport { format, parseISO } from 'date-fns';\nimport { ru } from 'date-fns/locale';\nimport ordersData from '../data/orders.json';\nimport productsData from '../data/products.json';\n\n// Створюємо реактивні змінні\nconst orders = ref(ordersData);\nconst products = ref(productsData);\nconst selectedOrder = ref(null);\n\n// Функція для отримання даних про продукт\nconst getProductInfo = (productId, key) => {\n  const product = products.value.find(p => p.id === productId);\n  return product ? product[key] || '' : '';\n};\n\n// Функція для отримання кількості продуктів у замовленні\nconst getProductCount = (orderId) => {\n  const order = orders.value.find(order => order.id === orderId);\n  return order ? order.productIds.length : 0;\n};\n\n// Функція для форматування дати\nconst formatDate = (date, formatStr, locale) => format(parseISO(date), formatStr, { locale });\n\n// Форматування дат\nconst formatShortDate = (date) => formatDate(date, 'MM/dd');\nconst formatLongDate = (date) => formatDate(date, 'dd/MMM/yyyy', ru);\n\n// Функція для отримання ціни продукту\nconst getProductPrice = (productId) => {\n  const product = products.value.find(product => product.id === productId);\n  if (product?.price?.length > 0) {\n    const defaultPrice = product.price.find(price => price.isDefault === 1);\n    return defaultPrice ? `${defaultPrice.value} ${defaultPrice.symbol}` : '';\n  }\n  return '';\n};\n\n// Функція для обробки кліку на замовлення\nconst selectOrder = (order) => selectedOrder.value = order;\n</script>\n\n\n<style scoped>\n.order-item {\n  display: flex;\n  padding: 10px;\n  border: 1px solid #ddd;\n  margin-bottom: 10px;\n  cursor: pointer;\n}\n\n.order-info {\n  padding-left: 30px;\n  display: flex;\n  flex-direction: column;\n}\n\n.order-title {\n  font-weight: bold;\n}\n\n.product-price {\n  color: green;\n  font-weight: bold;\n}\n\n.vfdsvfdcs {\n  padding-left: 40px;\n}\n</style>\n"],"mappings":"AAyCA,SAASA,GAAG,QAAQ,KAAK;AACzB,SAASC,MAAM,EAAEC,QAAQ,QAAQ,UAAU;AAC3C,SAASC,EAAE,QAAQ,iBAAiB;AACpC,OAAOC,UAAU,MAAM,qBAAqB;AAC5C,OAAOC,YAAY,MAAM,uBAAuB;;AAEhD;;;;;;;;IACA,MAAMC,MAAM,GAAGN,GAAG,CAACI,UAAU,CAAC;IAC9B,MAAMG,QAAQ,GAAGP,GAAG,CAACK,YAAY,CAAC;IAClC,MAAMG,aAAa,GAAGR,GAAG,CAAC,IAAI,CAAC;;IAE/B;IACA,MAAMS,cAAc,GAAGA,CAACC,SAAS,EAAEC,GAAG,KAAK;MACzC,MAAMC,OAAO,GAAGL,QAAQ,CAACM,KAAK,CAACC,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACC,EAAE,KAAKN,SAAS,CAAC;MAC5D,OAAOE,OAAO,GAAGA,OAAO,CAACD,GAAG,CAAC,IAAI,EAAE,GAAG,EAAE;IAC1C,CAAC;;IAED;IACA,MAAMM,eAAe,GAAIC,OAAO,IAAK;MACnC,MAAMC,KAAK,GAAGb,MAAM,CAACO,KAAK,CAACC,IAAI,CAACK,KAAK,IAAIA,KAAK,CAACH,EAAE,KAAKE,OAAO,CAAC;MAC9D,OAAOC,KAAK,GAAGA,KAAK,CAACC,UAAU,CAACC,MAAM,GAAG,CAAC;IAC5C,CAAC;;IAED;IACA,MAAMC,UAAU,GAAGA,CAACC,IAAI,EAAEC,SAAS,EAAEC,MAAM,KAAKxB,MAAM,CAACC,QAAQ,CAACqB,IAAI,CAAC,EAAEC,SAAS,EAAE;MAAEC;IAAO,CAAC,CAAC;;IAE7F;IACA,MAAMC,eAAe,GAAIH,IAAI,IAAKD,UAAU,CAACC,IAAI,EAAE,OAAO,CAAC;IAC3D,MAAMI,cAAc,GAAIJ,IAAI,IAAKD,UAAU,CAACC,IAAI,EAAE,aAAa,EAAEpB,EAAE,CAAC;;IAEpE;IACA,MAAMyB,eAAe,GAAIlB,SAAS,IAAK;MACrC,MAAME,OAAO,GAAGL,QAAQ,CAACM,KAAK,CAACC,IAAI,CAACF,OAAO,IAAIA,OAAO,CAACI,EAAE,KAAKN,SAAS,CAAC;MACxE,IAAIE,OAAO,EAAEiB,KAAK,EAAER,MAAM,GAAG,CAAC,EAAE;QAC9B,MAAMS,YAAY,GAAGlB,OAAO,CAACiB,KAAK,CAACf,IAAI,CAACe,KAAK,IAAIA,KAAK,CAACE,SAAS,KAAK,CAAC,CAAC;QACvE,OAAOD,YAAY,GAAG,GAAGA,YAAY,CAACjB,KAAK,IAAIiB,YAAY,CAACE,MAAM,EAAE,GAAG,EAAE;MAC3E;MACA,OAAO,EAAE;IACX,CAAC;;IAED;IACA,MAAMC,WAAW,GAAId,KAAK,IAAKX,aAAa,CAACK,KAAK,GAAGM,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}