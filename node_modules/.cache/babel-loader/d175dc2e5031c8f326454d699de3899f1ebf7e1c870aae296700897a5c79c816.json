{"ast":null,"code":"import { ref, onMounted } from 'vue';\nimport { format, parseISO } from 'date-fns';\nimport { ru } from 'date-fns/locale'; // Імпорт локалізації для російської мови\nimport ordersData from '../data/orders.json';\nimport productsData from '../data/products.json';\n\n// Створюємо реактивні змінні\n\nexport default {\n  __name: 'HomePrihod',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const orders = ref([]);\n    const products = ref([]);\n    const loading = ref(true);\n    const selectedOrder = ref(null);\n\n    // Функція для отримання назви продукту за ID\n    const getProductTitle = productId => {\n      const product = products.value.find(product => product.id === productId);\n      return product ? product.title : '';\n    };\n\n    // Функція для отримання кількості продуктів у замовленні\n    const getProductCount = orderId => {\n      const order = orders.value.find(order => order.id === orderId);\n      return order ? order.productIds.length : 0;\n    };\n\n    // Функція для форматування дати у форматі \"MM/DD\"\n    const formatShortDate = date => {\n      const parsedDate = parseISO(date);\n      return format(parsedDate, 'MM/dd');\n    };\n\n    // Функція для форматування дати у форматі \"DD/MMM/YYYY\"\n    const formatLongDate = date => {\n      const parsedDate = parseISO(date);\n      return format(parsedDate, 'dd/MMM/yyyy', {\n        locale: ru\n      });\n    };\n\n    // Функція для обробки кліку на замовлення\n    const selectOrder = order => {\n      selectedOrder.value = order;\n    };\n\n    // Імплементуємо отримання даних при монтуванні компонента\n    onMounted(() => {\n      orders.value = ordersData;\n      products.value = productsData;\n      loading.value = false;\n    });\n    const __returned__ = {\n      orders,\n      products,\n      loading,\n      selectedOrder,\n      getProductTitle,\n      getProductCount,\n      formatShortDate,\n      formatLongDate,\n      selectOrder,\n      ref,\n      onMounted,\n      get format() {\n        return format;\n      },\n      get parseISO() {\n        return parseISO;\n      },\n      get ru() {\n        return ru;\n      },\n      get ordersData() {\n        return ordersData;\n      },\n      get productsData() {\n        return productsData;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","format","parseISO","ru","ordersData","productsData","orders","products","loading","selectedOrder","getProductTitle","productId","product","value","find","id","title","getProductCount","orderId","order","productIds","length","formatShortDate","date","parsedDate","formatLongDate","locale","selectOrder"],"sources":["/home/vadim/my-test/src/views/HomePrihod.vue"],"sourcesContent":["<template>\n  <div>\n    <div>\n      <ul>\n        <li class=\"order-item\" v-for=\"order in orders\" :key=\"order.id\" @click=\"selectOrder(order)\">\n          <!-- <div class=\"order-header\"> -->\n            <span class=\"order-title\">Длиное название прихода</span>\n              <div class=\"order-info\">\n              <div>{{ getProductCount(order.id) }}</div>\n              <div>Продукти</div>\n            </div>\n                        <div class=\"order-info\">\n              <div>          <span>{{ formatShortDate(order.date) }}</span>\n</div>\n              <div> <span> {{ formatLongDate(order.date) }}</span></div>\n            </div>\n          <!-- </d -->\n          <h2>{{ order.title }}</h2>\n          <p>{{ order.description }}</p>\n          <p>{{ formatShortDate(order.date) }}</p>\n          <p> {{ formatLongDate(order.date) }}</p>\n          <ul v-if=\"selectedOrder && selectedOrder.id === order.id\">\n            <li v-for=\"productId in selectedOrder.productIds\" :key=\"productId\">\n              {{ getProductTitle(productId) || 'No product' }}\n            </li>\n          </ul>\n        </li>\n      </ul>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref, onMounted } from 'vue';\nimport { format, parseISO } from 'date-fns';\nimport { ru } from 'date-fns/locale'; // Імпорт локалізації для російської мови\nimport ordersData from '../data/orders.json';\nimport productsData from '../data/products.json';\n\n// Створюємо реактивні змінні\nconst orders = ref([]);\nconst products = ref([]);\nconst loading = ref(true);\nconst selectedOrder = ref(null);\n\n// Функція для отримання назви продукту за ID\nconst getProductTitle = (productId) => {\n  const product = products.value.find(product => product.id === productId);\n  return product ? product.title : '';\n};\n\n// Функція для отримання кількості продуктів у замовленні\nconst getProductCount = (orderId) => {\n  const order = orders.value.find(order => order.id === orderId);\n  return order ? order.productIds.length : 0;\n};\n\n// Функція для форматування дати у форматі \"MM/DD\"\nconst formatShortDate = (date) => {\n  const parsedDate = parseISO(date);\n  return format(parsedDate, 'MM/dd');\n};\n\n// Функція для форматування дати у форматі \"DD/MMM/YYYY\"\nconst formatLongDate = (date) => {\n  const parsedDate = parseISO(date);\n  return format(parsedDate, 'dd/MMM/yyyy', { locale: ru });\n};\n\n// Функція для обробки кліку на замовлення\nconst selectOrder = (order) => {\n  selectedOrder.value = order;\n};\n\n// Імплементуємо отримання даних при монтуванні компонента\nonMounted(() => {\n  orders.value = ordersData;\n  products.value = productsData;\n  loading.value = false;\n});\n</script>\n\n<style scoped>\n.order-item {\n  display: flex;\n  padding: 10px;\n  border: 1px solid #ddd;\n  margin-bottom: 10px;\n  cursor: pointer;\n}\n\n\n\n.order-title {\n  font-weight: bold;\n}\n\n.order-info {\n  display: flex;\n  flex-direction: column;\n}\n\n</style>\n"],"mappings":"AAiCA,SAASA,GAAG,EAAEC,SAAS,QAAQ,KAAK;AACpC,SAASC,MAAM,EAAEC,QAAQ,QAAQ,UAAU;AAC3C,SAASC,EAAE,QAAQ,iBAAiB,CAAC,CAAC;AACtC,OAAOC,UAAU,MAAM,qBAAqB;AAC5C,OAAOC,YAAY,MAAM,uBAAuB;;AAEhD;;;;;;;;IACA,MAAMC,MAAM,GAAGP,GAAG,CAAC,EAAE,CAAC;IACtB,MAAMQ,QAAQ,GAAGR,GAAG,CAAC,EAAE,CAAC;IACxB,MAAMS,OAAO,GAAGT,GAAG,CAAC,IAAI,CAAC;IACzB,MAAMU,aAAa,GAAGV,GAAG,CAAC,IAAI,CAAC;;IAE/B;IACA,MAAMW,eAAe,GAAIC,SAAS,IAAK;MACrC,MAAMC,OAAO,GAAGL,QAAQ,CAACM,KAAK,CAACC,IAAI,CAACF,OAAO,IAAIA,OAAO,CAACG,EAAE,KAAKJ,SAAS,CAAC;MACxE,OAAOC,OAAO,GAAGA,OAAO,CAACI,KAAK,GAAG,EAAE;IACrC,CAAC;;IAED;IACA,MAAMC,eAAe,GAAIC,OAAO,IAAK;MACnC,MAAMC,KAAK,GAAGb,MAAM,CAACO,KAAK,CAACC,IAAI,CAACK,KAAK,IAAIA,KAAK,CAACJ,EAAE,KAAKG,OAAO,CAAC;MAC9D,OAAOC,KAAK,GAAGA,KAAK,CAACC,UAAU,CAACC,MAAM,GAAG,CAAC;IAC5C,CAAC;;IAED;IACA,MAAMC,eAAe,GAAIC,IAAI,IAAK;MAChC,MAAMC,UAAU,GAAGtB,QAAQ,CAACqB,IAAI,CAAC;MACjC,OAAOtB,MAAM,CAACuB,UAAU,EAAE,OAAO,CAAC;IACpC,CAAC;;IAED;IACA,MAAMC,cAAc,GAAIF,IAAI,IAAK;MAC/B,MAAMC,UAAU,GAAGtB,QAAQ,CAACqB,IAAI,CAAC;MACjC,OAAOtB,MAAM,CAACuB,UAAU,EAAE,aAAa,EAAE;QAAEE,MAAM,EAAEvB;MAAG,CAAC,CAAC;IAC1D,CAAC;;IAED;IACA,MAAMwB,WAAW,GAAIR,KAAK,IAAK;MAC7BV,aAAa,CAACI,KAAK,GAAGM,KAAK;IAC7B,CAAC;;IAED;IACAnB,SAAS,CAAC,MAAM;MACdM,MAAM,CAACO,KAAK,GAAGT,UAAU;MACzBG,QAAQ,CAACM,KAAK,GAAGR,YAAY;MAC7BG,OAAO,CAACK,KAAK,GAAG,KAAK;IACvB,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}