{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-a4b78da2\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = [\"onClick\"];\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", {\n  class: \"order-title\"\n}, \"Длиное название прихода\", -1 /* HOISTED */));\nconst _hoisted_3 = {\n  class: \"order-info\"\n};\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", null, \"Продукти\", -1 /* HOISTED */));\nconst _hoisted_5 = {\n  class: \"order-info\"\n};\nconst _hoisted_6 = {\n  key: 0\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"div\", null, [_createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.orders, order => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      class: \"order-item\",\n      key: order.id,\n      onClick: $event => $setup.selectOrder(order)\n    }, [_createCommentVNode(\" <div class=\\\"order-header\\\"> \"), _hoisted_2, _createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"div\", null, _toDisplayString($setup.getProductCount(order.id)), 1 /* TEXT */), _hoisted_4]), _createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"div\", null, [_createElementVNode(\"span\", null, _toDisplayString($setup.formatShortDate(order.date)), 1 /* TEXT */)]), _createElementVNode(\"div\", null, [_createElementVNode(\"span\", null, _toDisplayString($setup.formatLongDate(order.date)), 1 /* TEXT */)])]), _createCommentVNode(\" </d \"), _createElementVNode(\"h2\", null, _toDisplayString(order.title), 1 /* TEXT */), _createElementVNode(\"p\", null, _toDisplayString(order.description), 1 /* TEXT */), _createElementVNode(\"p\", null, _toDisplayString($setup.formatShortDate(order.date)), 1 /* TEXT */), _createElementVNode(\"p\", null, _toDisplayString($setup.formatLongDate(order.date)), 1 /* TEXT */), $setup.selectedOrder && $setup.selectedOrder.id === order.id ? (_openBlock(), _createElementBlock(\"ul\", _hoisted_6, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.selectedOrder.productIds, productId => {\n      return _openBlock(), _createElementBlock(\"li\", {\n        key: productId\n      }, _toDisplayString($setup.getProductTitle(productId) || 'No product'), 1 /* TEXT */);\n    }), 128 /* KEYED_FRAGMENT */))])) : _createCommentVNode(\"v-if\", true)], 8 /* PROPS */, _hoisted_1);\n  }), 128 /* KEYED_FRAGMENT */))])])]);\n}","map":{"version":3,"names":["_createElementVNode","class","key","_createElementBlock","_Fragment","_renderList","$setup","orders","order","id","onClick","$event","selectOrder","_createCommentVNode","_hoisted_2","_hoisted_3","_toDisplayString","getProductCount","_hoisted_4","_hoisted_5","formatShortDate","date","formatLongDate","title","description","selectedOrder","_hoisted_6","productIds","productId","getProductTitle","_hoisted_1"],"sources":["/home/vadim/my-test/src/views/HomePrihod.vue"],"sourcesContent":["<template>\n  <div>\n    <div>\n      <ul>\n        <li class=\"order-item\" v-for=\"order in orders\" :key=\"order.id\" @click=\"selectOrder(order)\">\n          <!-- <div class=\"order-header\"> -->\n            <span class=\"order-title\">Длиное название прихода</span>\n              <div class=\"order-info\">\n              <div>{{ getProductCount(order.id) }}</div>\n              <div>Продукти</div>\n            </div>\n\n\n                        <div class=\"order-info\">\n              <div>          <span>{{ formatShortDate(order.date) }}</span>\n</div>\n              <div> <span> {{ formatLongDate(order.date) }}</span></div>\n            </div>\n          <!-- </d -->\n          <h2>{{ order.title }}</h2>\n          <p>{{ order.description }}</p>\n          <p>{{ formatShortDate(order.date) }}</p>\n          <p> {{ formatLongDate(order.date) }}</p>\n          <ul v-if=\"selectedOrder && selectedOrder.id === order.id\">\n            <li v-for=\"productId in selectedOrder.productIds\" :key=\"productId\">\n              {{ getProductTitle(productId) || 'No product' }}\n            </li>\n          </ul>\n        </li>\n      </ul>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref, onMounted } from 'vue';\nimport { format, parseISO } from 'date-fns';\nimport { ru } from 'date-fns/locale'; // Імпорт локалізації для російської мови\nimport ordersData from '../data/orders.json';\nimport productsData from '../data/products.json';\n\n// Створюємо реактивні змінні\nconst orders = ref([]);\nconst products = ref([]);\nconst loading = ref(true);\nconst selectedOrder = ref(null);\n\n// Функція для отримання назви продукту за ID\nconst getProductTitle = (productId) => {\n  const product = products.value.find(product => product.id === productId);\n  return product ? product.title : '';\n};\n\n// Функція для отримання кількості продуктів у замовленні\nconst getProductCount = (orderId) => {\n  const order = orders.value.find(order => order.id === orderId);\n  return order ? order.productIds.length : 0;\n};\n\n// Функція для форматування дати у форматі \"MM/DD\"\nconst formatShortDate = (date) => {\n  const parsedDate = parseISO(date);\n  return format(parsedDate, 'MM/dd');\n};\n\n// Функція для форматування дати у форматі \"DD/MMM/YYYY\"\nconst formatLongDate = (date) => {\n  const parsedDate = parseISO(date);\n  return format(parsedDate, 'dd/MMM/yyyy', { locale: ru });\n};\n\n// Функція для обробки кліку на замовлення\nconst selectOrder = (order) => {\n  selectedOrder.value = order;\n};\n\n// Імплементуємо отримання даних при монтуванні компонента\nonMounted(() => {\n  orders.value = ordersData;\n  products.value = productsData;\n  loading.value = false;\n});\n</script>\n\n<style scoped>\n.order-item {\n  display: flex;\n  padding: 10px;\n  border: 1px solid #ddd;\n  margin-bottom: 10px;\n  cursor: pointer;\n}\n\n\n\n.order-title {\n  font-weight: bold;\n}\n\n.order-info {\npadding-left: 30px;\n  display: flex;\n  flex-direction: column;\n}\n\n</style>\n"],"mappings":";;mBAAA;gEAMYA,mBAAA,CAAwD;EAAlDC,KAAK,EAAC;AAAa,GAAC,yBAAuB;;EAC1CA,KAAK,EAAC;AAAY;gEAEvBD,mBAAA,CAAmB,aAAd,UAAQ;;EAIEC,KAAK,EAAC;AAAY;;EAb/CC,GAAA;AAAA;;uBACEC,mBAAA,CA8BM,cA7BJH,mBAAA,CA4BM,cA3BJA,mBAAA,CA0BK,c,kBAzBHG,mBAAA,CAwBKC,SAAA,QA5BbC,WAAA,CAI+CC,MAAA,CAAAC,MAAM,EAAfC,KAAK;yBAAnCL,mBAAA,CAwBK;MAxBDF,KAAK,EAAC,YAAY;MAA0BC,GAAG,EAAEM,KAAK,CAACC,EAAE;MAAGC,OAAK,EAAAC,MAAA,IAAEL,MAAA,CAAAM,WAAW,CAACJ,KAAK;QACtFK,mBAAA,kCAAmC,EACjCC,UAAwD,EACtDd,mBAAA,CAGI,OAHJe,UAGI,GAFJf,mBAAA,CAA0C,aAAAgB,gBAAA,CAAlCV,MAAA,CAAAW,eAAe,CAACT,KAAK,CAACC,EAAE,mBAChCS,UAAmB,C,GAITlB,mBAAA,CAIN,OAJMmB,UAIN,GAHJnB,mBAAA,CACR,cADuBA,mBAAA,CAA8C,cAAAgB,gBAAA,CAArCV,MAAA,CAAAc,eAAe,CAACZ,KAAK,CAACa,IAAI,kB,GAElDrB,mBAAA,CAA0D,cAApDA,mBAAA,CAA8C,cAAAgB,gBAAA,CAApCV,MAAA,CAAAgB,cAAc,CAACd,KAAK,CAACa,IAAI,kB,KAE7CR,mBAAA,SAAY,EACZb,mBAAA,CAA0B,YAAAgB,gBAAA,CAAnBR,KAAK,CAACe,KAAK,kBAClBvB,mBAAA,CAA8B,WAAAgB,gBAAA,CAAxBR,KAAK,CAACgB,WAAW,kBACvBxB,mBAAA,CAAwC,WAAAgB,gBAAA,CAAlCV,MAAA,CAAAc,eAAe,CAACZ,KAAK,CAACa,IAAI,mBAChCrB,mBAAA,CAAwC,WAAAgB,gBAAA,CAAjCV,MAAA,CAAAgB,cAAc,CAACd,KAAK,CAACa,IAAI,mBACtBf,MAAA,CAAAmB,aAAa,IAAInB,MAAA,CAAAmB,aAAa,CAAChB,EAAE,KAAKD,KAAK,CAACC,EAAE,I,cAAxDN,mBAAA,CAIK,MA3BfuB,UAAA,I,kBAwBYvB,mBAAA,CAEKC,SAAA,QA1BjBC,WAAA,CAwBoCC,MAAA,CAAAmB,aAAa,CAACE,UAAU,EAArCC,SAAS;2BAApBzB,mBAAA,CAEK;QAF8CD,GAAG,EAAE0B;MAAS,GAAAZ,gBAAA,CAC5DV,MAAA,CAAAuB,eAAe,CAACD,SAAS;wCAzB1Cf,mBAAA,e,iBAAAiB,UAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}